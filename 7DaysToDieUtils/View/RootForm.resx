<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Helper_Btn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>